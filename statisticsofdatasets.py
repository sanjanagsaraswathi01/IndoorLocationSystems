# -*- coding: utf-8 -*-
"""StatisticsofDatasets.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1kCVfqf7JlNn0ec6USCOQDnYt7SWdU9Fs
"""

import numpy as np
import pandas as pd

import matplotlib.pyplot as plt

import torch
from torch.utils.data import Dataset, DataLoader
import torch.nn as nn


import tqdm

rating = pd.read_csv('u.data', delimiter='\t', header=None, names=['userId', 'itemId', 'rating'], usecols=(0,1,2))
rating_test_1 = pd.read_csv('ua.test', delimiter='\t', header=None, names=['userId', 'itemId', 'rating'], usecols=(0,1,2))
rating.head()

n_users = rating['userId'].nunique()
n_movies = rating['itemId'].nunique()
n_users, n_movies

import pandas as pd
import os

def read_data_ml100k():

    names = ['user_id', 'item_id', 'rating', 'timestamp']

    data = pd.read_csv('u.data', sep='\t', names=names, engine='python')


    num_users = data.user_id.unique().shape[0]
    num_items = data.item_id.unique().shape[0]

    return data, num_users, num_items


data, num_users, num_items = read_data_ml100k()

data, num_users, num_items = read_data_ml100k()
sparsity_movieLens = 1 - len(data) / (num_users * num_items)
print(f'number of users: {num_users}, number of items: {num_items}')
print(f'data:{data}')
print(f'matrix sparsity: {sparsity_movieLens:f}')
print(data.head(5))

import os
print("Current Directory:", os.getcwd())

# If you need to change the directory
# os.chdir('path_to_the_directory_where_file_is_located')

# Reading dataset file
dataset = pd.read_csv('/content/combined_data_1.txt',header = None, names = ['Cust_Id', 'Rating'], usecols = [0,1])

# Convert Ratings column to a float
dataset['Rating'] = dataset['Rating'].astype(float)

import pandas as pd
import os

def read_data_netflixprize():

    names = ['Cust_Id', 'Rating']

    dataset = pd.read_csv('combined_data_1.txt', sep='\t', names=names, engine='python')
    print(dataset)
    num_users = dataset.Cust_Id.unique().shape[0]
    num_rating = dataset.Rating.unique().shape[0]

    return dataset, num_users, num_rating


dataset, num_users, num_rating = read_data_netflixprize()

dataset, num_users, num_rating = read_data_netflixprize()
sparsity_netflix = 1 - len(dataset) / (num_users * num_rating)
print(f'number of users: {num_users}, number of Ratings: {num_rating}')
print(f'matrix sparsity: {sparsity_netflix:f}')
print(data.head(5))

import pandas as pd

def read_data_books():
    # File paths
    books_file_path = 'Books.csv'
    users_file_path = 'Users.csv'
    ratings_file_path = 'Ratings.csv'

    # Read the data from the CSV files
    books = pd.read_csv(books_file_path)
    users = pd.read_csv(users_file_path)
    ratings = pd.read_csv(ratings_file_path)

    # Assuming 'ISBN' is the unique identifier for books, and 'UserID' for users in your datasets
    num_books = books['ISBN'].nunique()
    num_users = users['User-ID'].nunique()

    # Ratings data
    data = ratings

    return data, num_users, num_books

# Read data
data, num_users, num_books = read_data_books()
num_ratings = len(data)

sparsity_books = 1 - (num_ratings / (num_users * num_books))

print(f'Number of users: {num_users}')
print(f'Number of books: {num_books}')
print(f'Number of ratings: {num_ratings}')
print(f'Matrix sparsity: {sparsity_books:f}')
print(data.head(5))

import pandas as pd
import matplotlib.pyplot as plt

# Sample data in a DataFrame
data = pd.DataFrame({
    'Datasets': ['MovieLens', 'Book Crossing'],
    'Sparsity(%)': [93.7, 99.9]
})

# Colors for each bar
colors = ['skyblue', 'lightgreen']

# Plotting directly from the DataFrame
ax = data.plot(kind='bar', x='Datasets', y='Sparsity(%)', color=colors, figsize=(10, 6), width=0.4)  # Adjust the width here

# Add title and labels
plt.title('Sparsity')
plt.xlabel('Datasets')
plt.ylabel('Sparsity(%)')
plt.xticks(rotation=0)  # Rotates the x labels to prevent overlap

# Removing the labels from the bars themselves
ax.legend().remove()

# Show the plot
plt.show()

import pandas as pd
import matplotlib.pyplot as plt

# Sample data in a DataFrame
data = pd.DataFrame({
    'Datasets': ['MovieLens', 'Book Crossing'],
    'Sparsity(%)': [93.7, 99.9]
})

# Colors for each bar
colors = ['skyblue', 'lightgreen']

# Plotting directly from the DataFrame
ax = data.plot(kind='bar', x='Datasets', y='Sparsity(%)', color=colors, figsize=(10, 6), width=0.4)  # Adjust the width here

# Add title and labels
plt.title('Sparsity')
plt.xlabel('Datasets')
plt.ylabel('Sparsity(%)')
plt.xticks(rotation=0)  # Rotates the x labels to prevent overlap

# Show the plot
plt.show()